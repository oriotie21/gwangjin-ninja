{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"chart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"canvas\", _hoisted_1, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["ref","_createElementBlock","_createElementVNode","_hoisted_1"],"sources":["C:\\github\\GwangJin_Ninja\\frontend\\src\\components\\Attack.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <canvas ref=\"chart\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Chart from \"chart.js\";\r\n\r\nexport default {\r\n  name: \"ChartJS\",\r\n  props: {\r\n    chartData: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n    options: {\r\n      type: Object,\r\n      default: () => ({}),\r\n    },\r\n  },\r\n  mounted() {\r\n    this.renderChart();\r\n  },\r\n  methods: {\r\n    renderChart() {\r\n      const chartData = this.chartData;\r\n      const options = this.options;\r\n\r\n      const chartConfig = {\r\n        type: \"pie\",\r\n        data: chartData,\r\n        options: options,\r\n      };\r\n\r\n      this.chart = new Chart(this.$refs.chart, chartConfig);\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    if (this.chart) {\r\n      this.chart.destroy();\r\n    }\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;EAEYA,GAAG,EAAC;AAAO;;uBADrBC,mBAAA,CAEM,cADJC,mBAAA,CAA6B,UAA7BC,UAA6B,8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}