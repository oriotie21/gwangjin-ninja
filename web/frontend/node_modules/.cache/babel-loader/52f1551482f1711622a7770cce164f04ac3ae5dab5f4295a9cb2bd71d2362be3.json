{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Bar = _resolveComponent(\"Bar\");\n  return _openBlock(), _createBlock(_component_Bar, {\n    id: \"my-chart-id\",\n    options: $data.chartOptions,\n    data: $data.chartData,\n    height: 60\n  }, null, 8 /* PROPS */, [\"options\", \"data\"]);\n}","map":{"version":3,"names":["_createBlock","_component_Bar","id","options","$data","chartOptions","data","chartData","height"],"sources":["C:\\github\\GwangJin_Ninja\\frontend\\src\\components\\Barchart.vue"],"sourcesContent":["<template>\r\n  <Bar\r\n    id=\"my-chart-id\"\r\n    :options=\"chartOptions\"\r\n    :data=\"chartData\"\r\n    :height=\"60\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nimport { Bar } from \"vue-chartjs\";\r\nimport {\r\n  Chart as ChartJS,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n} from \"chart.js\";\r\n\r\nimport axios from \"axios\";\r\n\r\nChartJS.register(\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale\r\n);\r\n\r\nexport default {\r\n  name: \"BarChart\",\r\n  components: { Bar },\r\n  data() {\r\n    const generateDateLabels = () => {\r\n      const months = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n      ];\r\n\r\n      const currentDate = new Date(new Date().getTime() + 9 * 60 * 60 * 1000);\r\n      const currentYear = currentDate.getFullYear();\r\n      const currentMonth = currentDate.getMonth();\r\n\r\n      const labels = [];\r\n      for (let i = 11; i >= 0; i--) {\r\n        const monthIndex = (currentMonth + 12 - i) % 12;\r\n        const month = months[monthIndex];\r\n        const year = currentYear - Math.floor((currentMonth + 12 - i) / 12);\r\n        const label = `${month} ${year}`;\r\n        labels.push(label);\r\n      }\r\n      return labels;\r\n    };\r\n\r\n    const generateData = (label) => {\r\n      const data = [];\r\n      for (let i = 12; i > 0; i++) {\r\n        count = 0;\r\n        fetchHits(i);\r\n        this.hits.forEach((hit) => {\r\n          if (hit._source.label === label) {\r\n            count++;\r\n          }\r\n        });\r\n        data.push(count);\r\n      }\r\n      return data;\r\n    };\r\n\r\n    return {\r\n      chartData: {\r\n        labels: generateDateLabels(),\r\n        datasets: [\r\n          {\r\n            label: \"rulebased\",\r\n            data: generateData(\"rulebased\"),\r\n            backgroundColor: \"#8294C4\",\r\n          },\r\n          {\r\n            label: \"Benign\",\r\n            data: generateData(\"Benign\"),\r\n            backgroundColor: \"#DBDFEA\",\r\n          },\r\n          {\r\n            label: \"Bot\",\r\n            data: generateData(\"Bot\"),\r\n            backgroundColor: \"#ACB1D6\",\r\n          },\r\n          {\r\n            label: \"BruteForce_Web\",\r\n            data: generateData(\"BruteForce_Web\"),\r\n            backgroundColor: \"#8294C4\",\r\n          },\r\n          {\r\n            label: \"BruteForce_XSS\",\r\n            data: generateData(\"BruteForce_XSS\"),\r\n            backgroundColor: \"#DBDFEA\",\r\n          },\r\n          {\r\n            label: \"DDOS_attack_HOIC\",\r\n            data: generateData(\"DDOS_attack_HOIC\"),\r\n            backgroundColor: \"#ACB1D6\",\r\n          },\r\n          {\r\n            label: \"DDOS_attack_LOIC_UDP\",\r\n            data: generateData(\"DDOS_attack_LOIC_UDP\"),\r\n            backgroundColor: \"#8294C4\",\r\n          },\r\n          {\r\n            label: \"DDoS_attacks_LOIC_HTTP\",\r\n            data: generateData(\"DDoS_attacks_LOIC_HTTP\"),\r\n            backgroundColor: \"#DBDFEA\",\r\n          },\r\n          {\r\n            label: \"DoS_attacks_GoldenEye\",\r\n            data: generateData(\"DoS_attacks_GoldenEye\"),\r\n            backgroundColor: \"#ACB1D6\",\r\n          },\r\n          {\r\n            label: \"DoS_attacks_Hulk\",\r\n            data: generateData(\"DoS_attacks_Hulk\"),\r\n            backgroundColor: \"#8294C4\",\r\n          },\r\n          {\r\n            label: \"DoS_attacks_SlowHTTPTest\",\r\n            data: generateData(\"DoS_attacks_SlowHTTPTest\"),\r\n            backgroundColor: \"#DBDFEA\",\r\n          },\r\n          {\r\n            label: \"DoS_attacks_Slowloris\",\r\n            data: generateData(\"DoS_attacks_Slowloris\"),\r\n            backgroundColor: \"#ACB1D6\",\r\n          },\r\n          {\r\n            label: \"FTP_BruteForce\",\r\n            data: generateData(\"FTP_BruteForce\"),\r\n            backgroundColor: \"#8294C4\",\r\n          },\r\n          {\r\n            label: \"Infilteration\",\r\n            data: generateData(\"Infilteration\"),\r\n            backgroundColor: \"#DBDFEA\",\r\n          },\r\n          {\r\n            label: \"SQLInjection\",\r\n            data: generateData(\"SQLInjection\"),\r\n            backgroundColor: \"#ACB1D6\",\r\n          },\r\n          {\r\n            label: \"SSH_Bruteforce\",\r\n            data: generateData(\"SSH_Bruteforce\"),\r\n            backgroundColor: \"#8294C4\",\r\n          },\r\n        ],\r\n      },\r\n      chartOptions: {\r\n        responsive: true,\r\n        type: \"barStacked\",\r\n        stacked: true,\r\n        grouped: false,\r\n        scales: {\r\n          x: {\r\n            //position: \"top\",\r\n          },\r\n        },\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    fetchHits(minusmonth) {\r\n      axios\r\n        .get(\"http://localhost:8080/api/hitscsv_duration\", {\r\n          params: {\r\n            lte:\r\n              new Date(new Date().getTime() + 9 * 60 * 60 * 1000)\r\n                .setMonth(new Date().getMonth() - minusmonth)\r\n                .toISOString()\r\n                .slice(0, 8) + \"31T23:59:59.999999+0900\",\r\n            gte:\r\n              new Date()\r\n                .setMonth(new Date().getMonth() - minusmonth)\r\n                .toISOString()\r\n                .slice(0, 8) + \"01T00:00:00.000000+0900\",\r\n          },\r\n        })\r\n        .then((response) => {\r\n          this.hits = response.data; // Update the hits data in the component\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;uBACEA,YAAA,CAKEC,cAAA;IAJAC,EAAE,EAAC,aAAa;IACfC,OAAO,EAAEC,KAAA,CAAAC,YAAY;IACrBC,IAAI,EAAEF,KAAA,CAAAG,SAAS;IACfC,MAAM,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}