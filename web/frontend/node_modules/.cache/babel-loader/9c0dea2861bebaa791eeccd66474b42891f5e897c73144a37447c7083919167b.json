{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  for: \"loginId\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", null, \"아이디\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_7 = {\n  for: \"loginPw\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"span\", null, \"패스워드\", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.state.account.id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createTextVNode(\" 안녕하세요 \" + _toDisplayString($setup.state.account.name) + \"님!\", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.logout && _ctx.logout(...args))\n  }, \" 로그아웃 \")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"label\", _hoisted_4, [_createCommentVNode(\"label로 묶어줌\"), _hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"loginId\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.state.form.loginId = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.state.form.loginId]])]), _hoisted_6, _createElementVNode(\"label\", _hoisted_7, [_createCommentVNode(\"label로 묶어줌\"), _hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"loginPw\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.state.form.loginPw = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.state.form.loginPw]])]), _hoisted_9, _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => $setup.submit())\n  }, \"로그인\")]))]);\n}","map":{"version":3,"names":["class","for","_createElementVNode","_createElementBlock","_hoisted_1","$setup","state","account","id","_hoisted_2","_toDisplayString","name","onClick","_cache","args","_ctx","logout","_hoisted_3","_hoisted_4","_createCommentVNode","_hoisted_5","type","form","loginId","$event","_hoisted_6","_hoisted_7","_hoisted_8","loginPw","_hoisted_9","submit"],"sources":["C:\\github\\GwangJin_Ninja\\frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <div v-if=\"state.account.id\">\n      안녕하세요 {{ state.account.name }}님!<button @click=\"logout\">\n        로그아웃\n      </button>\n    </div>\n    <div v-else>\n      <label for=\"loginId\">\n        <!--label로 묶어줌-->\n        <span>아이디</span>\n        <input type=\"text\" id=\"loginId\" v-model=\"state.form.loginId\" />\n      </label>\n      <hr />\n      <label for=\"loginPw\">\n        <!--label로 묶어줌-->\n        <span>패스워드</span>\n        <input type=\"password\" id=\"loginPw\" v-model=\"state.form.loginPw\" />\n      </label>\n      <hr />\n      <button @click=\"submit()\">로그인</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { reactive } from \"vue\";\nexport default {\n  setup() {\n    const state = reactive({\n      account: {\n        id: null,\n        name: \"\",\n      },\n      form: {\n        loginId: \"\",\n        loginPw: \"\",\n      },\n    });\n\n    const submit = () => {\n      const args = {\n        loginId: state.form.loginId,\n        loginPw: state.form.loginPw,\n      };\n      axios\n        .post(\"/api/account\", args)\n        .then((res) => {\n          alert(\"로그인에 성공했습니다.\");\n          state.account = res.data;\n        })\n        .catch(() => {\n          alert(\"로그인에 실패했습니다.\");\n        });\n    };\n\n    axios.get(\"/api/account\").then((res) => {\n      state.account = res.data;\n    });\n\n    return { state, submit };\n  },\n};\n</script>\n>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAK;;;;;;;;EAOLC,GAAG,EAAC;AAAS;gCAElBC,mBAAA,CAAgB,cAAV,KAAG;gCAGXA,mBAAA,CAAM;;EACCD,GAAG,EAAC;AAAS;gCAElBC,mBAAA,CAAiB,cAAX,MAAI;gCAGZA,mBAAA,CAAM;;;uBAlBVC,mBAAA,CAqBM,OArBNC,UAqBM,GApBOC,MAAA,CAAAC,KAAK,CAACC,OAAO,CAACC,EAAE,I,cAA3BL,mBAAA,CAIM,OAAAM,UAAA,G,iBAJuB,SACrB,GAAAC,gBAAA,CAAGL,MAAA,CAAAC,KAAK,CAACC,OAAO,CAACI,IAAI,IAAG,IAAE,iBAAAT,mBAAA,CAEvB;IAFgCU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,MAAA,IAAAD,IAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,QAExD,E,oBAEFX,mBAAA,CAcM,OAAAc,UAAA,GAbJf,mBAAA,CAIQ,SAJRgB,UAIQ,GAHNC,mBAAA,cAAiB,EACjBC,UAAgB,E,gBAChBlB,mBAAA,CAA+D;IAAxDmB,IAAI,EAAC,MAAM;IAACb,EAAE,EAAC,SAAS;+DAAUH,MAAA,CAAAC,KAAK,CAACgB,IAAI,CAACC,OAAO,GAAAC,MAAA;iDAAlBnB,MAAA,CAAAC,KAAK,CAACgB,IAAI,CAACC,OAAO,E,KAE7DE,UAAM,EACNvB,mBAAA,CAIQ,SAJRwB,UAIQ,GAHNP,mBAAA,cAAiB,EACjBQ,UAAiB,E,gBACjBzB,mBAAA,CAAmE;IAA5DmB,IAAI,EAAC,UAAU;IAACb,EAAE,EAAC,SAAS;+DAAUH,MAAA,CAAAC,KAAK,CAACgB,IAAI,CAACM,OAAO,GAAAJ,MAAA;iDAAlBnB,MAAA,CAAAC,KAAK,CAACgB,IAAI,CAACM,OAAO,E,KAEjEC,UAAM,EACN3B,mBAAA,CAAsC;IAA7BU,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAW,MAAA,IAAEnB,MAAA,CAAAyB,MAAM;KAAI,KAAG,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}