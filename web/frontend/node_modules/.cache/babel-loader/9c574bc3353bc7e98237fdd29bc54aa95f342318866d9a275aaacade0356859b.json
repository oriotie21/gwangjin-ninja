{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"TrafficForm\",\n  data() {\n    return {\n      items: []\n    };\n  },\n  created() {\n    this.items = this.generateRandomPackets(50);\n  },\n  methods: {\n    generateRandomPackets(count) {\n      const protocols = [\"TCP\", \"UDP\", \"ICMP\"];\n      const sources = [\"192.168.0.1\", \"192.168.0.2\", \"192.168.0.3\"];\n      const destinations = [\"8.8.8.8\", \"1.1.1.1\", \"4.4.4.4\"];\n      const packets = [];\n      for (let i = 0; i < count; i++) {\n        const protocol = protocols[Math.floor(Math.random() * protocols.length)];\n        const source = sources[Math.floor(Math.random() * sources.length)];\n        const destination = destinations[Math.floor(Math.random() * destinations.length)];\n        const length = Math.floor(Math.random() * 1500);\n        const time = new Date().toLocaleTimeString();\n        const srcPort = Math.floor(Math.random() * 65536);\n        const dstPort = Math.floor(Math.random() * 65536);\n        const status = Math.random() < 0.5 ? \"open\" : \"closed\";\n        packets.push({\n          protocol,\n          source,\n          destination,\n          length,\n          time,\n          srcPort: srcPort,\n          dstPort: dstPort,\n          status: status\n        });\n      }\n      return packets;\n    }\n  }\n};","map":{"version":3,"names":["name","data","items","created","generateRandomPackets","methods","count","protocols","sources","destinations","packets","i","protocol","Math","floor","random","length","source","destination","time","Date","toLocaleTimeString","srcPort","dstPort","status","push"],"sources":["C:\\github\\GwangJin_Ninja\\frontend\\src\\components\\Traffic.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <main>\r\n        <div\r\n          class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\"\r\n        >\r\n          <h1 class=\"h2\">Dashboard</h1>\r\n          <div class=\"btn-toolbar mb-2 mb-md-0\">\r\n            <div class=\"btn-group me-2\"></div>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\r\n            >\r\n              <span data-feather=\"calendar\" class=\"align-text-bottom\"></span>\r\n              This week\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <b-table striped hover :items=\"items\"></b-table>\r\n      </main>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"TrafficForm\",\r\n  data() {\r\n    return {\r\n      items: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.items = this.generateRandomPackets(50);\r\n  },\r\n  methods: {\r\n    generateRandomPackets(count) {\r\n      const protocols = [\"TCP\", \"UDP\", \"ICMP\"];\r\n      const sources = [\"192.168.0.1\", \"192.168.0.2\", \"192.168.0.3\"];\r\n      const destinations = [\"8.8.8.8\", \"1.1.1.1\", \"4.4.4.4\"];\r\n      const packets = [];\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        const protocol =\r\n          protocols[Math.floor(Math.random() * protocols.length)];\r\n        const source = sources[Math.floor(Math.random() * sources.length)];\r\n        const destination =\r\n          destinations[Math.floor(Math.random() * destinations.length)];\r\n        const length = Math.floor(Math.random() * 1500);\r\n        const time = new Date().toLocaleTimeString();\r\n        const srcPort = Math.floor(Math.random() * 65536);\r\n        const dstPort = Math.floor(Math.random() * 65536);\r\n        const status = Math.random() < 0.5 ? \"open\" : \"closed\";\r\n\r\n        packets.push({\r\n          protocol,\r\n          source,\r\n          destination,\r\n          length,\r\n          time,\r\n          srcPort: srcPort,\r\n          dstPort: dstPort,\r\n          status: status,\r\n        });\r\n      }\r\n\r\n      return packets;\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";AA0BA,eAAe;EACbA,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACD,KAAI,GAAI,IAAI,CAACE,qBAAqB,CAAC,EAAE,CAAC;EAC7C,CAAC;EACDC,OAAO,EAAE;IACPD,qBAAqBA,CAACE,KAAK,EAAE;MAC3B,MAAMC,SAAQ,GAAI,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC;MACxC,MAAMC,OAAM,GAAI,CAAC,aAAa,EAAE,aAAa,EAAE,aAAa,CAAC;MAC7D,MAAMC,YAAW,GAAI,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;MACtD,MAAMC,OAAM,GAAI,EAAE;MAElB,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIL,KAAK,EAAEK,CAAC,EAAE,EAAE;QAC9B,MAAMC,QAAO,GACXL,SAAS,CAACM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAC,GAAIR,SAAS,CAACS,MAAM,CAAC,CAAC;QACzD,MAAMC,MAAK,GAAIT,OAAO,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAC,GAAIP,OAAO,CAACQ,MAAM,CAAC,CAAC;QAClE,MAAME,WAAU,GACdT,YAAY,CAACI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAC,GAAIN,YAAY,CAACO,MAAM,CAAC,CAAC;QAC/D,MAAMA,MAAK,GAAIH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAC,GAAI,IAAI,CAAC;QAC/C,MAAMI,IAAG,GAAI,IAAIC,IAAI,EAAE,CAACC,kBAAkB,EAAE;QAC5C,MAAMC,OAAM,GAAIT,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAC,GAAI,KAAK,CAAC;QACjD,MAAMQ,OAAM,GAAIV,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAC,GAAI,KAAK,CAAC;QACjD,MAAMS,MAAK,GAAIX,IAAI,CAACE,MAAM,EAAC,GAAI,GAAE,GAAI,MAAK,GAAI,QAAQ;QAEtDL,OAAO,CAACe,IAAI,CAAC;UACXb,QAAQ;UACRK,MAAM;UACNC,WAAW;UACXF,MAAM;UACNG,IAAI;UACJG,OAAO,EAAEA,OAAO;UAChBC,OAAO,EAAEA,OAAO;UAChBC,MAAM,EAAEA;QACV,CAAC,CAAC;MACJ;MAEA,OAAOd,OAAO;IAChB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}