{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withCtx as _withCtx, withModifiers as _withModifiers, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"app\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  for: \"loginId\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", null, \"아이디\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_8 = {\n  for: \"loginPw\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", null, \"패스워드\", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_router_view)]), _createElementVNode(\"div\", _hoisted_2, [$setup.state.account.id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, \"안녕하세요 \" + _toDisplayString($setup.state.account.username) + \"님!\", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.logout())\n  }, \"로그아웃\")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"label\", _hoisted_5, [_createCommentVNode(\"label로 묶어줌\"), _hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"loginId\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.state.form.loginId = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.state.form.loginId]])]), _hoisted_7, _createElementVNode(\"label\", _hoisted_8, [_createCommentVNode(\"label로 묶어줌\"), _hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"loginPw\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.state.form.loginPw = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.state.form.loginPw]])]), _hoisted_10, _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => $setup.submit())\n  }, \"로그인\")]))]), _createElementVNode(\"div\", null, [_createCommentVNode(\" /login 경로로 이동하는 링크를 만듭니다. \"), _createVNode(_component_router_link, {\n    to: \"/login\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"로그인\")]),\n    _: 1 /* STABLE */\n  }), !$setup.state.account.id ? (_openBlock(), _createElementBlock(\"form\", {\n    key: 0,\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $setup.submit && $setup.submit(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" 로그인 폼의 내용 \")], 32 /* HYDRATE_EVENTS */)) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["id","class","for","_createElementVNode","_hoisted_1","_createVNode","_component_router_view","_hoisted_2","$setup","state","account","_createElementBlock","_hoisted_3","_toDisplayString","username","onClick","_cache","$event","logout","_hoisted_4","_hoisted_5","_createCommentVNode","_hoisted_6","type","form","loginId","_hoisted_7","_hoisted_8","_hoisted_9","loginPw","_hoisted_10","submit","_component_router_link","to","onSubmit","_withModifiers","args"],"sources":["C:\\github\\GwangJin_Ninja\\frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <router-view></router-view>\n  </div>\n  <div class=\"app\">\n    <div v-if=\"state.account.id\">\n      <p>안녕하세요 {{ state.account.username }}님!</p>\n      <button @click=\"logout()\">로그아웃</button>\n    </div>\n    <div v-else>\n      <label for=\"loginId\">\n        <!--label로 묶어줌-->\n        <span>아이디</span>\n        <input type=\"text\" id=\"loginId\" v-model=\"state.form.loginId\" />\n      </label>\n      <hr />\n      <label for=\"loginPw\">\n        <!--label로 묶어줌-->\n        <span>패스워드</span>\n        <input type=\"password\" id=\"loginPw\" v-model=\"state.form.loginPw\" />\n      </label>\n      <hr />\n      <button @click=\"submit()\">로그인</button>\n    </div>\n  </div>\n  <div>\n    <!-- /login 경로로 이동하는 링크를 만듭니다. -->\n    <router-link to=\"/login\">로그인</router-link>\n    <form v-if=\"!state.account.id\" @submit.prevent=\"submit\">\n      <!-- 로그인 폼의 내용 -->\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { reactive } from \"vue\";\nimport Header from \"./components/layout/Header.vue\";\nexport default {\n  components: {\n    HeaderForm,\n  },\n  setup() {\n    const state = reactive({\n      account: {\n        id: null,\n        username: \"\",\n      },\n      form: {\n        loginId: \"\",\n        loginPw: \"\",\n      },\n    });\n\n    const submit = () => {\n      const args = {\n        loginId: state.form.loginId,\n        loginPw: state.form.loginPw,\n      };\n      axios\n        .post(\"/api/account\", args)\n        .then((res) => {\n          alert(\"로그인에 성공했습니다.\");\n          state.account = res.data;\n          state.form.loginId = \"\";\n          state.form.loginPw = \"\";\n        })\n        .catch(() => {\n          alert(\"로그인에 실패했습니다.\");\n        });\n    };\n\n    const logout = () => {\n      axios.delete(\"/api/account\").then(() => {\n        alert(\"로그아웃하였습니다.\");\n        state.account.id = null;\n        state.account.username = \"\";\n      });\n    };\n\n    axios.get(\"/api/account\").then((res) => {\n      state.account = res.data;\n    });\n\n    return { state, submit, logout };\n  },\n};\n</script>\n>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EAGRC,KAAK,EAAC;AAAK;;;;;;;;EAMLC,GAAG,EAAC;AAAS;gCAElBC,mBAAA,CAAgB,cAAV,KAAG;gCAGXA,mBAAA,CAAM;;EACCD,GAAG,EAAC;AAAS;gCAElBC,mBAAA,CAAiB,cAAX,MAAI;iCAGZA,mBAAA,CAAM;;;;;6DApBVA,mBAAA,CAEM,OAFNC,UAEM,GADJC,YAAA,CAA2BC,sBAAA,E,GAE7BH,mBAAA,CAoBM,OApBNI,UAoBM,GAnBOC,MAAA,CAAAC,KAAK,CAACC,OAAO,CAACV,EAAE,I,cAA3BW,mBAAA,CAGM,OAAAC,UAAA,GAFJT,mBAAA,CAA2C,WAAxC,QAAM,GAAAU,gBAAA,CAAGL,MAAA,CAAAC,KAAK,CAACC,OAAO,CAACI,QAAQ,IAAG,IAAE,iBACvCX,mBAAA,CAAuC;IAA9BY,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAET,MAAA,CAAAU,MAAM;KAAI,MAAI,E,oBAEhCP,mBAAA,CAcM,OAAAQ,UAAA,GAbJhB,mBAAA,CAIQ,SAJRiB,UAIQ,GAHNC,mBAAA,cAAiB,EACjBC,UAAgB,E,gBAChBnB,mBAAA,CAA+D;IAAxDoB,IAAI,EAAC,MAAM;IAACvB,EAAE,EAAC,SAAS;+DAAUQ,MAAA,CAAAC,KAAK,CAACe,IAAI,CAACC,OAAO,GAAAR,MAAA;iDAAlBT,MAAA,CAAAC,KAAK,CAACe,IAAI,CAACC,OAAO,E,KAE7DC,UAAM,EACNvB,mBAAA,CAIQ,SAJRwB,UAIQ,GAHNN,mBAAA,cAAiB,EACjBO,UAAiB,E,gBACjBzB,mBAAA,CAAmE;IAA5DoB,IAAI,EAAC,UAAU;IAACvB,EAAE,EAAC,SAAS;+DAAUQ,MAAA,CAAAC,KAAK,CAACe,IAAI,CAACK,OAAO,GAAAZ,MAAA;iDAAlBT,MAAA,CAAAC,KAAK,CAACe,IAAI,CAACK,OAAO,E,KAEjEC,WAAM,EACN3B,mBAAA,CAAsC;IAA7BY,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAET,MAAA,CAAAuB,MAAM;KAAI,KAAG,E,MAGjC5B,mBAAA,CAMM,cALJkB,mBAAA,+BAAkC,EAClChB,YAAA,CAA0C2B,sBAAA;IAA7BC,EAAE,EAAC;EAAQ;sBAAC,MAAG,C,iBAAH,KAAG,E;;OACfzB,MAAA,CAAAC,KAAK,CAACC,OAAO,CAACV,EAAE,I,cAA7BW,mBAAA,CAEO;;IAFyBuB,QAAM,EAAAlB,MAAA,QAAAA,MAAA,MAAAmB,cAAA,KAAAC,IAAA,KAAU5B,MAAA,CAAAuB,MAAA,IAAAvB,MAAA,CAAAuB,MAAA,IAAAK,IAAA,CAAM;MACpDf,mBAAA,eAAkB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}