{"ast":null,"code":"import { GChart } from \"vue-google-charts\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet.heat/dist/leaflet-heat.js\";\n\n// IP 주소의 위치를 가져오는 함수\nasync function getIPGeoLocation(ip) {\n  const response = await axios.get(`https://geoip.maxmind.com/geoip/v2.1/city/${ip}`, {\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Bearer YOUR_MAXMIND_API_KEY\" // MaxMind API 키를 입력해야 합니다.\n    }\n  });\n\n  return response.data;\n}\nexport default {\n  name: \"AttackForm\",\n  components: {\n    GChart\n  },\n  mounted() {\n    this.initMap();\n  },\n  methods: {\n    initMap() {\n      getIPGeoLocation(\"123.456.789.0\").then(location => {\n        const {\n          latitude,\n          longitude\n        } = location.location;\n\n        // Leaflet 마커를 생성하여 위치에 추가\n        L.marker([latitude, longitude]).addTo(map);\n      }).catch(error => {\n        console.error(error);\n      });\n      // Leaflet 지도 인스턴스 생성\n      const map = L.map(\"map\", {\n        center: [30, 156],\n        zoom: 1.5,\n        minZoom: 1.5,\n        // 최소 확대 범위 설정\n        maxZoom: 10,\n        // 최대 확대 범위 설정\n        maxBounds: L.latLngBounds(L.latLng(90, 330),\n        // 왼쪽 상단 경계 좌표\n        L.latLng(-90, -30) // 오른쪽 하단 경계 좌표\n        )\n      });\n\n      // Leaflet 타일 레이어 추가 (OpenStreetMap 사용)\n      L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        attribution: \"Map data &copy; OpenStreetMap contributors\",\n        maxZoom: 18\n      }).addTo(map);\n\n      // Leaflet.heat 라이브러리를 사용하여 히트맵 레이어 추가\n      const heatLayer = L.heatLayer([[33, 126, 10000], [37.7749, 242.4194, 5000]],\n      // 히트맵 데이터 ([위도, 경도, 가중치] 형식)\n      {\n        radius: 25\n      } // 히트맵 스타일 및 옵션\n      ).addTo(map);\n      setTimeout(function () {\n        map.addLayer(heatLayer);\n      }, 500);\n    }\n  },\n  data() {\n    return {\n      data: [[\"Attack\", \"Today\"], [\"Benign\", 0], [\"Attack2\", 0], [\"Attack3\", 0]],\n      options: {\n        backgroundColor: \"#AFD3E2\",\n        width: 1000,\n        height: 600,\n        chartArea: {\n          width: \"90%\",\n          height: \"90%\"\n        },\n        legend: {\n          position: \"right\",\n          alignment: \"center\",\n          textStyle: {\n            fontSize: 20 // 글씨 크기 조정\n          }\n        },\n\n        colors: [\"#FFB6C1\", \"#C3ACD0\", \"#98FB98\", \"#FFDAB9\", \"#FFA07A\"],\n        pieSliceBorderColor: \"none\",\n        pieSliceTextStyle: {\n          fontSize: 20,\n          // 데이터 레이블의 크기를 지정\n          bold: true\n        }\n      }\n    };\n  }\n};","map":{"version":3,"names":["GChart","L","getIPGeoLocation","ip","response","axios","get","headers","Accept","Authorization","data","name","components","mounted","initMap","methods","then","location","latitude","longitude","marker","addTo","map","catch","error","console","center","zoom","minZoom","maxZoom","maxBounds","latLngBounds","latLng","tileLayer","attribution","heatLayer","radius","setTimeout","addLayer","options","backgroundColor","width","height","chartArea","legend","position","alignment","textStyle","fontSize","colors","pieSliceBorderColor","pieSliceTextStyle","bold"],"sources":["C:\\github\\GwangJin_Ninja\\frontend\\src\\components\\Attack.vue"],"sourcesContent":["<template>\r\n  <b-container fluid>\r\n    <b-row>\r\n      <div id=\"map\" class=\"col-md-8\"></div>\r\n      <div class=\"col-md-4\">\r\n        <GChart type=\"PieChart\" :options=\"options\" :data=\"data\" />\r\n      </div>\r\n    </b-row>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nimport { GChart } from \"vue-google-charts\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"leaflet.heat/dist/leaflet-heat.js\";\r\n\r\n// IP 주소의 위치를 가져오는 함수\r\nasync function getIPGeoLocation(ip) {\r\n  const response = await axios.get(\r\n    `https://geoip.maxmind.com/geoip/v2.1/city/${ip}`,\r\n    {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer YOUR_MAXMIND_API_KEY\", // MaxMind API 키를 입력해야 합니다.\r\n      },\r\n    }\r\n  );\r\n  return response.data;\r\n}\r\n\r\nexport default {\r\n  name: \"AttackForm\",\r\n  components: {\r\n    GChart,\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n  },\r\n\r\n  methods: {\r\n    initMap() {\r\n      getIPGeoLocation(\"123.456.789.0\")\r\n        .then((location) => {\r\n          const { latitude, longitude } = location.location;\r\n\r\n          // Leaflet 마커를 생성하여 위치에 추가\r\n          L.marker([latitude, longitude]).addTo(map);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n      // Leaflet 지도 인스턴스 생성\r\n      const map = L.map(\"map\", {\r\n        center: [30, 156],\r\n        zoom: 1.5,\r\n        minZoom: 1.5, // 최소 확대 범위 설정\r\n        maxZoom: 10, // 최대 확대 범위 설정\r\n        maxBounds: L.latLngBounds(\r\n          L.latLng(90, 330), // 왼쪽 상단 경계 좌표\r\n          L.latLng(-90, -30) // 오른쪽 하단 경계 좌표\r\n        ),\r\n      });\r\n\r\n      // Leaflet 타일 레이어 추가 (OpenStreetMap 사용)\r\n      L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n        attribution: \"Map data &copy; OpenStreetMap contributors\",\r\n        maxZoom: 18,\r\n      }).addTo(map);\r\n\r\n      // Leaflet.heat 라이브러리를 사용하여 히트맵 레이어 추가\r\n      const heatLayer = L.heatLayer(\r\n        [\r\n          [33, 126, 10000],\r\n          [37.7749, 242.4194, 5000],\r\n        ], // 히트맵 데이터 ([위도, 경도, 가중치] 형식)\r\n        { radius: 25 } // 히트맵 스타일 및 옵션\r\n      ).addTo(map);\r\n\r\n      setTimeout(function () {\r\n        map.addLayer(heatLayer);\r\n      }, 500);\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      data: [\r\n        [\"Attack\", \"Today\"],\r\n        [\"Benign\", 0],\r\n        [\"Attack2\", 0],\r\n        [\"Attack3\", 0],\r\n      ],\r\n      options: {\r\n        backgroundColor: \"#AFD3E2\",\r\n        width: 1000,\r\n        height: 600,\r\n        chartArea: {\r\n          width: \"90%\",\r\n          height: \"90%\",\r\n        },\r\n        legend: {\r\n          position: \"right\",\r\n          alignment: \"center\",\r\n          textStyle: {\r\n            fontSize: 20, // 글씨 크기 조정\r\n          },\r\n        },\r\n        colors: [\"#FFB6C1\", \"#C3ACD0\", \"#98FB98\", \"#FFDAB9\", \"#FFA07A\"],\r\n        pieSliceBorderColor: \"none\",\r\n        pieSliceTextStyle: {\r\n          fontSize: 20, // 데이터 레이블의 크기를 지정\r\n          bold: true,\r\n        },\r\n      },\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#map {\r\n  width: 1000px;\r\n  height: 600px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}