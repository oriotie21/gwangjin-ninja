{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Line = _resolveComponent(\"Line\");\n  return _openBlock(), _createBlock(_component_Line, {\n    data: _ctx.chartData\n  }, null, 8 /* PROPS */, [\"data\"]);\n}","map":{"version":3,"names":["_createBlock","_component_Line","data","_ctx","chartData"],"sources":["C:\\github\\GwangJin_Ninja\\frontend\\src\\components\\Timetable.vue"],"sourcesContent":["<template>\r\n  <Line :data=\"chartData\" />\r\n</template>\r\n\r\n<script>\r\n//Importing Line class from the vue-chartjs wrapper\r\nimport { Line } from \"vue-chartjs\";\r\n\r\n//Exporting this so it can be used in other components\r\nexport default {\r\n  name: \"TimeTableForm\",\r\n  extends: Line,\r\n  data() {\r\n    return {\r\n      datacollection: {\r\n        //Data to be represented on x-axis\r\n        labels: [\r\n          \"January\",\r\n          \"February\",\r\n          \"March\",\r\n          \"April\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          \"August\",\r\n          \"September\",\r\n          \"October\",\r\n          \"November\",\r\n          \"December\",\r\n        ],\r\n        datasets: [\r\n          {\r\n            label: \"Data One\",\r\n            backgroundColor: \"#f87979\",\r\n            pointBackgroundColor: \"white\",\r\n            borderWidth: 1,\r\n            pointBorderColor: \"#249EBF\",\r\n            //Data to be represented on y-axis\r\n            data: [40, 20, 30, 50, 90, 10, 20, 40, 50, 70, 90, 100],\r\n          },\r\n        ],\r\n      },\r\n      //Chart.js options that controls the appearance of the chart\r\n      options: {\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                beginAtZero: true,\r\n              },\r\n              gridLines: {\r\n                display: true,\r\n              },\r\n            },\r\n          ],\r\n          xAxes: [\r\n            {\r\n              gridLines: {\r\n                display: false,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        legend: {\r\n          display: true,\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    //renderChart function renders the chart with the datacollection and options object.\r\n    this.renderChart(this.datacollection, this.options);\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;uBACEA,YAAA,CAA0BC,eAAA;IAAnBC,IAAI,EAAEC,IAAA,CAAAC;EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}