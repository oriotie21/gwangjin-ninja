{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_2 = {\n  id: \"app\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"app\"\n}, [/*#__PURE__*/_createCommentVNode(\" <div v-if=\\\"state.account.id\\\">\\n      <p>안녕하세요 {{ state.account.username }}님!</p>\\n      <button @click=\\\"logout()\\\">로그아웃</button>\\n    </div>\\n    <div v-else>\\n      <label for=\\\"loginId\\\">\\n        <span>아이디 </span>\\n        <input type=\\\"text\\\" id=\\\"loginId\\\" v-model=\\\"state.form.loginId\\\" />\\n      </label>\\n      <br />\\n      <br />\\n      <label for=\\\"loginPw\\\">\\n        <span>비밀번호 </span>\\n        <input type=\\\"password\\\" id=\\\"loginPw\\\" v-model=\\\"state.form.loginPw\\\" />\\n      </label>\\n      <br />\\n      <br />\\n      <router-link to=\\\"/login\\\" class=\\\"btn btn-primary\\\" @click=\\\"submit()\\\">\\n        로그인\\n      </router-link>\\n    </div> \")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeaderForm = _resolveComponent(\"HeaderForm\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_HeaderForm), _hoisted_1, _createCommentVNode(\"draw line\"), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_router_view)]), _hoisted_3], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","id","class","_createCommentVNode","_createVNode","_component_HeaderForm","_hoisted_1","_hoisted_2","_component_router_view","_hoisted_3"],"sources":["C:\\github\\GwangJin_Ninja\\frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <HeaderForm></HeaderForm>\n  <hr />\n  <!--draw line-->\n  <div id=\"app\">\n    <router-view></router-view>\n  </div>\n  <div class=\"app\">\n    <!-- <div v-if=\"state.account.id\">\n      <p>안녕하세요 {{ state.account.username }}님!</p>\n      <button @click=\"logout()\">로그아웃</button>\n    </div>\n    <div v-else>\n      <label for=\"loginId\">\n        <span>아이디 </span>\n        <input type=\"text\" id=\"loginId\" v-model=\"state.form.loginId\" />\n      </label>\n      <br />\n      <br />\n      <label for=\"loginPw\">\n        <span>비밀번호 </span>\n        <input type=\"password\" id=\"loginPw\" v-model=\"state.form.loginPw\" />\n      </label>\n      <br />\n      <br />\n      <router-link to=\"/login\" class=\"btn btn-primary\" @click=\"submit()\">\n        로그인\n      </router-link>\n    </div> -->\n  </div>\n</template>\n\n<script>\n// import axios from \"axios\";\n// import { reactive } from \"vue\";\nimport HeaderForm from \"./components/layout/Header.vue\";\nexport default {\n  components: {\n    HeaderForm,\n  },\n  setup() {\n    const state = reactive({\n      account: {\n        id: null,\n        username: \"\",\n      },\n      form: {\n        loginId: \"\",\n        loginPw: \"\",\n      },\n    });\n\n    const submit = () => {\n      const args = {\n        loginId: state.form.loginId,\n        loginPw: state.form.loginPw,\n      };\n      axios\n        .post(\"/api/account\", args)\n        .then((res) => {\n          alert(\"로그인에 성공했습니다.\");\n          state.account = res.data;\n          state.form.loginId = \"\";\n          state.form.loginPw = \"\";\n        })\n        .catch(() => {\n          alert(\"로그인에 실패했습니다.\");\n        });\n    };\n\n    const logout = () => {\n      axios.delete(\"/api/account\").then(() => {\n        alert(\"로그아웃하였습니다.\");\n        state.account.id = null;\n        state.account.username = \"\";\n      });\n    };\n\n    axios.get(\"/api/account\").then((res) => {\n      state.account = res.data;\n    });\n\n    return { state, submit, logout };\n  },\n};\n</script>\n>\n"],"mappings":";gCAEEA,mBAAA,CAAM;;EAEDC,EAAE,EAAC;AAAK;gCAGbD,mBAAA,CAsBM;EAtBDE,KAAK,EAAC;AAAK,I,aACdC,mBAAA,spBAoBU,C;;;;;6DA3BZC,YAAA,CAAyBC,qBAAA,GACzBC,UAAM,EACNH,mBAAA,aAAgB,EAChBH,mBAAA,CAEM,OAFNO,UAEM,GADJH,YAAA,CAA2BI,sBAAA,E,GAE7BC,UAsBM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}