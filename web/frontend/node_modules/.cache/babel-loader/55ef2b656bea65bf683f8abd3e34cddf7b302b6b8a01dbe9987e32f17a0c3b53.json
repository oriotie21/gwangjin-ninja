{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map\",\n  class: \"col-md-8\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"col-md-4\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Attack Type Statistics\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_GChart = _resolveComponent(\"GChart\");\n  const _component_b_row = _resolveComponent(\"b-row\");\n  const _component_b_container = _resolveComponent(\"b-container\");\n  return _openBlock(), _createBlock(_component_b_container, {\n    fluid: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_b_row, null, {\n      default: _withCtx(() => [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createVNode(_component_GChart, {\n        type: \"PieChart\",\n        options: $data.options,\n        data: $data.data\n      }, null, 8 /* PROPS */, [\"options\", \"data\"])])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","id","class","_createBlock","_component_b_container","fluid","_createVNode","_component_b_row","_hoisted_1","_hoisted_2","_hoisted_3","_component_GChart","type","options","$data","data"],"sources":["C:\\github\\GwangJin_Ninja\\frontend\\src\\components\\Attack.vue"],"sourcesContent":["<template>\r\n  <b-container fluid>\r\n    <b-row>\r\n      <div id=\"map\" class=\"col-md-8\"></div>\r\n      <div class=\"col-md-4\">\r\n        <h2>Attack Type Statistics</h2>\r\n        <GChart type=\"PieChart\" :options=\"options\" :data=\"data\" />\r\n      </div>\r\n    </b-row>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nimport { GChart } from \"vue-google-charts\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nexport default {\r\n  name: \"AttackForm\",\r\n  components: {\r\n    GChart,\r\n  },\r\n  mounted() {\r\n    const southWest = L.latLng(-40, -230); // 남서쪽 좌표\r\n    const northEast = L.latLng(70, -180); // 북동쪽 좌표\r\n    const bounds = L.latLngBounds(southWest, northEast); // 좌표 범위 객체 생성\r\n    const map = L.map(\"map\", {\r\n      maxBounds: bounds, // 최대 좌표 범위 설정\r\n      maxBoundsViscosity: 1.0, // 지도 영역을 벗어날 때 바운드를 따르도록 설정\r\n    });\r\n    map.fitBounds(bounds); // 좌표 범위에 맞게 지도를 조정\r\n\r\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n      minZoom: 1.5,\r\n      maxZoom: 19,\r\n      attribution:\r\n        'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors',\r\n    }).addTo(map);\r\n  },\r\n  data() {\r\n    return {\r\n      data: [\r\n        [\"Daily Routine\", \"Hours per Day\"],\r\n        [\"Work\", 14],\r\n        [\"Eat\", 1],\r\n        [\"Reading\", 2],\r\n        [\"Exercise\", 2],\r\n        [\"Sleep\", 5],\r\n      ],\r\n      options: {\r\n        backgroundColor: \"#AFD3E2\",\r\n        width: 800,\r\n        height: 600,\r\n      },\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#map {\r\n  height: 600px;\r\n}\r\n</style>\r\n"],"mappings":";gCAGMA,mBAAA,CAAqC;EAAhCC,EAAE,EAAC,KAAK;EAACC,KAAK,EAAC;;;EACfA,KAAK,EAAC;AAAU;gCACnBF,mBAAA,CAA+B,YAA3B,wBAAsB;;;;;;uBAJhCG,YAAA,CAQcC,sBAAA;IARDC,KAAK,EAAL;EAAK;sBAChB,MAMQ,CANRC,YAAA,CAMQC,gBAAA;wBALN,MAAqC,CAArCC,UAAqC,EACrCR,mBAAA,CAGM,OAHNS,UAGM,GAFJC,UAA+B,EAC/BJ,YAAA,CAA0DK,iBAAA;QAAlDC,IAAI,EAAC,UAAU;QAAEC,OAAO,EAAEC,KAAA,CAAAD,OAAO;QAAGE,IAAI,EAAED,KAAA,CAAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}