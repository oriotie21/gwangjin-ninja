{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"option\", {\n  disabled: \"\",\n  value: \"\"\n}, \"Please select one\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedValue = $event)\n  }, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.options, option => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: option.value\n    }, _toDisplayString(option.text), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 256 /* UNKEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedValue]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.goToAttackPage && $options.goToAttackPage(...args))\n  }, \"Next\")]);\n}","map":{"version":3,"names":["_createElementVNode","disabled","value","_createElementBlock","$data","selectedValue","$event","_hoisted_1","_Fragment","_renderList","options","option","text","_hoisted_2","onClick","_cache","args","$options","goToAttackPage"],"sources":["C:\\github\\GwangJin_Ninja\\frontend\\src\\components\\Main.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <select v-model=\"selectedValue\">\r\n      <option disabled value=\"\">Please select one</option>\r\n      <option v-for=\"option in options\" :value=\"option.value\">\r\n        {{ option.text }}\r\n      </option>\r\n    </select>\r\n    <button @click=\"goToAttackPage\">Next</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Main\",\r\n  data() {\r\n    return {\r\n      options: [\r\n        { text: \"1\", value: 1 },\r\n        { text: \"2\", value: 2 },\r\n        { text: \"3\", value: 3 },\r\n        { text: \"4\", value: 4 },\r\n        { text: \"5\", value: 5 },\r\n      ],\r\n      selectedValue: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    goToAttackPage() {\r\n      if (this.selectedValue) {\r\n        this.$router.push({\r\n          path: \"/attack\",\r\n          query: { option: this.selectedValue },\r\n        });\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";gCAGMA,mBAAA,CAAoD;EAA5CC,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;GAAG,mBAAiB;;;uBAF/CC,mBAAA,CAQM,c,gBAPJH,mBAAA,CAKS;+DALQI,KAAA,CAAAC,aAAa,GAAAC,MAAA;MAC5BC,UAAoD,G,kBACpDJ,mBAAA,CAESK,SAAA,QAAAC,WAAA,CAFgBL,KAAA,CAAAM,OAAO,EAAjBC,MAAM;yBAArBR,mBAAA,CAES;MAF0BD,KAAK,EAAES,MAAM,CAACT;wBAC5CS,MAAM,CAACC,IAAI,wBAAAC,UAAA;6EAHDT,KAAA,CAAAC,aAAa,E,GAM9BL,mBAAA,CAA6C;IAApCc,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KAAE,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}